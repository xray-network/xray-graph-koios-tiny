services:
  postgres:
    build:
      context: .
      target: postgres
    environment:
      - POSTGRES_LOGGING=true
      - POSTGRES_DB=${POSTGRES_DB:-cexplorer}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT:-127.0.0.1:5432}:5432
    shm_size: 2gb
    volumes:
      - ./config/postgresql/postgresql.${NETWORK}.conf:/etc/postgresql.conf
      - postgres-data:/var/lib/postgresql/data"
      - ./config/postgresql/01_init.sql:/docker-entrypoint-initdb.d/01_init.sql
    command:
      - "-c"
      - config_file=/etc/postgresql.conf
    restart: on-failure
    logging:
      driver: json-file
      options:
        max-size: 200k
        max-file: "10"

  cardano-node-ogmios:
    image: cardanosolutions/cardano-node-ogmios:v6.13.0_10.1.4-${NETWORK}
    logging:
      driver: json-file
      options:
        max-size: 400k
        max-file: "20"
    ports:
      - ${OGMIOS_PORT:-127.0.0.1:1337}:1337
      - ${CARDANO_PORT:-3000}:3000
    volumes:
      - node-db:/db
      - node-ipc:/ipc
    restart: on-failure
    labels:
      - traefik.enable=true
      - traefik.http.routers.cardano-node-ogmios-${NETWORK}.rule=Host(`any`) || (Header(`Host-Resolver`,`ogmios/${NETWORK}`) && Header(`Bearer-Resolver`,`${BEARER_RESOLVER_TOKEN}`))
      - traefik.http.routers.cardano-node-ogmios-${NETWORK}.entrypoints=websecure
      - traefik.http.routers.cardano-node-ogmios-${NETWORK}.tls=true
      - traefik.http.routers.cardano-node-ogmios-${NETWORK}.service=cardano-node-ogmios-${NETWORK}
      - traefik.http.services.cardano-node-ogmios-${NETWORK}.loadbalancer.server.port=1337
    networks:
      - default
      - traefik

  cardano-db-sync:
    build:
      context: .
      target: cardano-db-sync
    command:
      - "--config"
      - config/config.json
      - "--socket-path"
      - /node-ipc/node.socket
    environment:
      - EKG=Y
      - RESTORE_SNAPSHOT=${RESTORE_SNAPSHOT:-}
      - RESTORE_RECREATE_DB=N
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-cexplorer}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - cardano-node-ogmios
      - postgres
    volumes:
      - ./snapshots:/snapshots
      - ./config/cardano-configurations/network/${NETWORK}:/cardano-config
      - ./config/cardano-db-sync/${NETWORK}:/config
      - node-ipc:/node-ipc
      - db-sync-data:/var/lib/cexplorer
    restart: on-failure
    stop_signal: SIGINT
    logging:
      driver: local
      options:
        max-size: 200k
        max-file: "10"

  koios:
    build:
      context: .
      target: koios
    environment:
      - NETWORK=${NETWORK}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-cexplorer}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGHOST=postgres
      - PGPORT=5432
      - PGRST_DB_URI=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-cexplorer}
    ports:
      - ${KOIOS_TINY_PORT:-127.0.0.1:8050}:8050
    depends_on:
      - postgres
    restart: on-failure
    labels:
      - traefik.enable=true
      - traefik.http.routers.koios-${NETWORK}.rule=Host(`any`) || (Header(`Host-Resolver`,`koios/${NETWORK}`) && Header(`Bearer-Resolver`,`${BEARER_RESOLVER_TOKEN}`))
      - traefik.http.routers.koios-${NETWORK}.entrypoints=websecure
      - traefik.http.routers.koios-${NETWORK}.tls=true
      - traefik.http.routers.koios-${NETWORK}.service=koios-${NETWORK}
      - traefik.http.services.koios-${NETWORK}.loadbalancer.server.port=8050
      - traefik.http.middlewares.koios-rewrite-${NETWORK}.replacepathregex.regex=^/(.*)
      - traefik.http.middlewares.koios-rewrite-${NETWORK}.replacepathregex.replacement=/rpc/$1
      - traefik.http.routers.koios-${NETWORK}.middlewares=koios-rewrite-${NETWORK}
    networks:
      - default
      - traefik
    logging:
      driver: json-file
      options:
        max-size: 200k
        max-file: "10"

  ogmios-proxy:
    build:
      context: .
      target: ogmios-proxy
    environment:
      - OGMIOS_HOST=cardano-node-ogmios
      - OGMIOS_PORT=1337
    ports:
      - ${OGMIOS_TINY_PORT:-127.0.0.1:8700}:8700
    depends_on:
      - cardano-node-ogmios
    restart: on-failure
    labels:
      - traefik.enable=true
      - traefik.http.routers.ogmios-proxy-${NETWORK}.rule=(Host(`any`) || (Header(`Host-Resolver`,`koios/${NETWORK}`) && Header(`Bearer-Resolver`,`${BEARER_RESOLVER_TOKEN}`))) && (PathPrefix(`/submittx`) || PathPrefix(`/ogmios`))
      - traefik.http.routers.ogmios-proxy-${NETWORK}.entrypoints=websecure
      - traefik.http.routers.ogmios-proxy-${NETWORK}.tls=true
      - traefik.http.routers.ogmios-proxy-${NETWORK}.service=ogmios-proxy-${NETWORK}
      - traefik.http.services.ogmios-proxy-${NETWORK}.loadbalancer.server.port=8700
    networks:
      - default
      - traefik
    logging:
      driver: json-file
      options:
        max-size: 200k
        max-file: "10"

volumes:
  db-sync-data:
  node-db:
  node-ipc:
  postgres-data:

networks:
  traefik:
    external: true
